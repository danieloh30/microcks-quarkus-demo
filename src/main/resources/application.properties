# You can customize your test port
quarkus.http.test-port=8282

# You can explicitly disable microcks devservices.
quarkus.microcks.devservices.enabled=true

# Now that we have auto-discovery of artifacts in 0.1.3, you no longer need to specify
# primary and secondary artifacts. But you can still use them if you need fine control.
#quarkus.microcks.devservices.artifacts.primaries=target/classes/order-service-openapi.yaml,target/test-classes/third-parties/apipastries-openapi.yaml,target/test-classes/third-parties/hello-v1.proto
#quarkus.microcks.devservices.artifacts.secondaries=target/test-classes/third-parties/apipastries-postman-collection.json,target/test-classes/third-parties/HelloService-postman-collection.json,target/test-classes/third-parties/HelloService-metadata.yml

quarkus.microcks.devservices.image-name=quay.io/microcks/microcks-uber:nightly

# Specify here the Mock URL provided by microcks devservices, referencing the quarkus.microcks.default.http
quarkus.rest-client."org.acme.order.client.PastryAPIClient".url=${quarkus.microcks.default.http}/rest/API+Pastries/0.0.1

mp.messaging.outgoing.orders-created.connector=smallrye-kafka
mp.messaging.outgoing.orders-created.topic=orders-created

mp.messaging.incoming.orders-reviewed.connector=smallrye-kafka
mp.messaging.incoming.orders-reviewed.topic=OrderEventsAPI-0.1.0-orders-reviewed

quarkus.log.level=INFO
quarkus.log.category."org.testcontainers".level=INFO
quarkus.log.category."tc".level=INFO
